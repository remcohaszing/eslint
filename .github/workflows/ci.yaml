name: ci

on:
  pull_request:
  push:
    branches: [main]
    tags: ['*']

jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: { node-version: 20 }
      - run: npm ci
      - run: npx eslint .

  pack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: { node-version: 20 }
      - run: npm ci
      - run: npm pack
      - uses: actions/upload-artifact@v3
        with:
          name: package
          path: '*.tgz'

  prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: { node-version: 20 }
      - run: npm ci
      - run: npx prettier --check .

  release:
    runs-on: ubuntu-latest
    needs:
      - eslint
      - pack
      - prettier
      - remark
      - test
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      id-token: write
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
      - uses: actions/download-artifact@v3
        with: { name: package }
      - run: npm publish *.tgz --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  remark:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: { node-version: 20 }
      - run: npm ci
      - run: npx remark --frail .

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 16
          - 18
          - 20
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: { node-version: '${{ matrix.node-version }}' }
      - run: npm ci
      - run: node --test

const confusingBrowserGlobals = require('confusing-browser-globals')

const allowedProperties = require('../utils/allowedProperties.js')
const prettier = require('../utils/prettier.js')

module.exports = {
  'accessor-pairs': 'error',
  'array-bracket-newline': 'off',
  'array-bracket-spacing': 'off',
  'array-callback-return': ['error', { allowImplicit: true }],
  'array-element-newline': 'off',
  'arrow-body-style': 'error',
  'arrow-parens': 'off',
  'arrow-spacing': 'off',
  'block-scoped-var': 'error',
  'block-spacing': 'off',
  'brace-style': 'off',
  'callback-return': 'off',
  camelcase: ['error', { allow: allowedProperties }],
  'capitalized-comments': [
    'error',
    'always',
    {
      ignoreConsecutiveComments: true,
      ignorePattern: /^\s*(c8|type-coverage:|webpack\w)/.source
    }
  ],
  'class-methods-use-this': 'error',
  'comma-dangle': 'off',
  'comma-spacing': 'off',
  'comma-style': 'off',
  complexity: 'off',
  'computed-property-spacing': 'off',
  'consistent-return': 'off',
  'consistent-this': 'error',
  'constructor-super': 'error',
  curly: 'error',
  'default-case': 'error',
  'default-case-last': 'error',
  'default-param-last': 'error',
  'dot-location': 'off',
  'dot-notation': 'error',
  'eol-last': 'off',
  eqeqeq: ['error', 'always', { null: 'never' }],
  'for-direction': 'error',
  'func-call-spacing': 'off',
  'func-name-matching': 'off',
  'func-names': 'error',
  'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
  'function-call-argument-newline': 'off',
  'function-paren-newline': 'off',
  'generator-star-spacing': 'off',
  'getter-return': 'error',
  'global-require': 'off',
  'grouped-accessor-pairs': ['error', 'getBeforeSet'],
  'guard-for-in': 'error',
  'handle-callback-err': 'off',
  'id-blacklist': 'off',
  'id-denylist': ['error', 'l', 'O', 'React'],
  'id-length': 'off',
  'id-match': 'off',
  'implicit-arrow-linebreak': 'off',
  indent: 'off',
  'indent-legacy': 'off',
  'init-declarations': 'off',
  'jsx-quotes': 'off',
  'key-spacing': 'off',
  'keyword-spacing': 'off',
  'line-comment-position': 'error',
  'linebreak-style': 'off',
  'lines-around-comment': [
    'error',
    {
      allowBlockStart: true,
      allowObjectStart: true,
      allowArrayStart: true,
      allowClassStart: true
    }
  ],
  'lines-around-directive': 'off',
  'lines-between-class-members': 'error',
  'logical-assignment-operators': ['off', 'always', { enforceForIfStatements: true }],
  'max-classes-per-file': 'off',
  'max-depth': 'off',
  'max-len': [
    'error',
    {
      code: prettier.js.printWidth,
      ignorePattern: /^(?!\s+(\/\/|\*))|eslint-disable/.source,
      ignoreUrls: true,
      ignoreRegExpLiterals: true,
      ignoreStrings: true,
      ignoreTemplateLiterals: true
    }
  ],
  'max-lines': 'off',
  'max-lines-per-function': 'off',
  'max-nested-callbacks': 'off',
  'max-params': 'off',
  'max-statements': 'off',
  'max-statements-per-line': 'off',
  'multiline-comment-style': 'off',
  'multiline-ternary': 'off',
  'new-cap': 'error',
  'new-parens': 'off',
  'newline-after-var': 'off',
  'newline-before-return': 'off',
  'newline-per-chained-call': 'off',
  'no-alert': 'error',
  'no-array-constructor': 'error',
  'no-async-promise-executor': 'error',
  'no-await-in-loop': 'off',
  'no-bitwise': 'off',
  'no-buffer-constructor': 'off',
  'no-caller': 'error',
  'no-case-declarations': 'error',
  'no-catch-shadow': 'off',
  'no-class-assign': 'error',
  'no-compare-neg-zero': 'error',
  'no-cond-assign': 'error',
  'no-confusing-arrow': 'off',
  'no-console': 'error',
  'no-const-assign': 'error',
  'no-constant-binary-expression': 'error',
  'no-constant-condition': 'error',
  'no-constructor-return': 'error',
  'no-continue': 'off',
  'no-control-regex': 'error',
  'no-debugger': 'error',
  'no-delete-var': 'off',
  'no-div-regex': 'off',
  'no-dupe-args': 'error',
  'no-dupe-class-members': 'error',
  'no-dupe-else-if': 'error',
  'no-dupe-keys': 'error',
  'no-duplicate-case': 'error',
  'no-duplicate-imports': ['error', { includeExports: true }],
  'no-else-return': ['error', { allowElseIf: false }],
  'no-empty': 'error',
  'no-empty-character-class': 'error',
  'no-empty-function': 'error',
  'no-empty-pattern': 'error',
  'no-empty-static-block': 'error',
  'no-eq-null': 'off',
  'no-eval': 'error',
  'no-ex-assign': 'error',
  'no-extend-native': 'error',
  'no-extra-bind': 'error',
  'no-extra-boolean-cast': 'error',
  'no-extra-label': 'error',
  'no-extra-parens': 'off',
  'no-extra-semi': 'off',
  'no-fallthrough': 'error',
  'no-floating-decimal': 'off',
  'no-func-assign': 'error',
  'no-global-assign': 'error',
  'no-implicit-coercion': ['error', { disallowTemplateShorthand: true }],
  'no-implicit-globals': 'error',
  'no-implied-eval': 'error',
  'no-import-assign': 'error',
  'no-inline-comments': ['error', { ignorePattern: /\s@type\s/.source }],
  'no-inner-declarations': 'error',
  'no-invalid-regexp': 'error',
  'no-invalid-this': 'off',
  'no-irregular-whitespace': ['error', { skipStrings: false }],
  'no-iterator': 'error',
  'no-label-var': 'error',
  'no-labels': ['error', { allowLoop: true }],
  'no-lone-blocks': 'error',
  'no-lonely-if': 'off',
  'no-loop-func': 'error',
  'no-loss-of-precision': 'error',
  'no-magic-numbers': 'off',
  'no-misleading-character-class': 'error',
  'no-mixed-operators': 'off',
  'no-mixed-requires': 'off',
  'no-mixed-spaces-and-tabs': 'off',
  'no-multi-assign': 'error',
  'no-multi-spaces': 'off',
  'no-multi-str': 'error',
  'no-multiple-empty-lines': 'off',
  'no-native-reassign': 'off',
  'no-negated-condition': 'off',
  'no-negated-in-lhs': 'off',
  'no-nested-ternary': 'off',
  'no-new': 'error',
  'no-new-func': 'error',
  'no-new-native-nonconstructor': 'error',
  'no-new-object': 'off',
  'no-new-require': 'off',
  'no-new-symbol': 'error',
  'no-new-wrappers': 'error',
  'no-nonoctal-decimal-escape': 'off',
  'no-obj-calls': 'error',
  'no-object-constructor': 'error',
  'no-octal': 'off',
  'no-octal-escape': 'error',
  'no-param-reassign': [
    'error',
    {
      props: true,
      // Koa context.
      ignorePropertyModificationsFor: ['ctx']
    }
  ],
  'no-path-concat': 'off',
  'no-plusplus': 'error',
  'no-process-env': 'off',
  'no-process-exit': 'off',
  'no-promise-executor-return': 'error',
  'no-proto': 'error',
  'no-prototype-builtins': 'error',
  'no-redeclare': 'error',
  'no-regex-spaces': 'error',
  'no-restricted-exports': 'off',
  'no-restricted-globals': ['error', ...confusingBrowserGlobals.filter((name) => name !== 'self')],
  'no-restricted-imports': [
    'error',
    { name: 'node:assert', message: 'Use node:assert/strict instead.' },
    { name: 'node:test', importNames: ['it'], message: 'Use test instead.' },
    { name: 'node:dns', importNames: ['promises'], message: 'Use node:dns/promises instead.' },
    { name: 'node:fs', importNames: ['promises'], message: 'Use node:fs/promises instead.' },
    {
      name: 'node:stream',
      importNames: ['promises'],
      message: 'Use node:stream/promises instead.'
    },
    {
      name: 'node:timers',
      importNames: ['promises'],
      message: 'Use node:timers/promises instead.'
    }
  ],
  'no-restricted-modules': 'off',
  'no-restricted-properties': 'off',
  'no-restricted-syntax': [
    'error',
    {
      // `value.toString()`
      selector:
        'CallExpression[callee.property.name="toString"][callee.optional=false][arguments.length=0][optional=false]',
      message: 'Use String() instead.'
    },
    {
      selector: '[returnType.type="TSTypeAnnotation"]>TSTypeAnnotation>TSVoidKeyword',
      message: 'Use undefined for non-returning functions of unknown for callbacks'
    }
  ],
  'no-return-assign': ['error', 'always'],
  'no-return-await': 'error',
  'no-script-url': 'error',
  'no-self-assign': 'error',
  'no-self-compare': 'error',
  'no-sequences': ['error', { allowInParentheses: false }],
  'no-setter-return': 'error',
  'no-shadow': ['error', { hoist: 'all' }],
  'no-shadow-restricted-names': 'error',
  'no-spaced-func': 'off',
  'no-sparse-arrays': 'off',
  'no-sync': 'off',
  'no-tabs': ['error', { allowIndentationTabs: true }],
  'no-template-curly-in-string': 'off',
  'no-ternary': 'off',
  'no-this-before-super': 'error',
  'no-throw-literal': 'error',
  'no-trailing-spaces': 'off',
  'no-undef': 'error',
  'no-undef-init': 'error',
  'no-undefined': 'off',
  'no-underscore-dangle': 'error',
  'no-unexpected-multiline': 'off',
  'no-unmodified-loop-condition': 'off',
  'no-unneeded-ternary': 'error',
  'no-unreachable': 'error',
  'no-unreachable-loop': 'error',
  'no-unsafe-finally': 'error',
  'no-unsafe-negation': 'error',
  'no-unsafe-optional-chaining': 'error',
  'no-unused-expressions': ['error', { enforceForJSX: true }],
  'no-unused-labels': 'error',
  'no-unused-private-class-members': 'error',
  'no-unused-vars': ['error', { ignoreRestSiblings: true }],
  'no-use-before-define': 'error',
  'no-useless-backreference': 'error',
  'no-useless-call': 'error',
  'no-useless-catch': 'error',
  'no-useless-computed-key': 'error',
  'no-useless-concat': 'error',
  'no-useless-constructor': 'error',
  'no-useless-escape': 'error',
  'no-useless-rename': 'error',
  'no-useless-return': 'error',
  'no-var': 'error',
  'no-void': 'error',
  'no-warning-comments': 'off',
  'no-whitespace-before-property': 'off',
  'no-with': 'error',
  'nonblock-statement-body-position': 'off',
  'object-curly-newline': 'off',
  'object-curly-spacing': 'off',
  'object-property-newline': 'off',
  'object-shorthand': ['error', 'always', { avoidExplicitReturnArrows: true }],
  'one-var': ['error', 'never'],
  'one-var-declaration-per-line': 'off',
  'operator-assignment': 'error',
  'operator-linebreak': 'off',
  'padded-blocks': 'off',
  'padding-line-between-statements': 'off',
  'prefer-arrow-callback': ['error', { allowUnboundThis: false }],
  'prefer-const': ['error', { destructuring: 'all', ignoreReadBeforeAssign: true }],
  'prefer-destructuring': [
    'error',
    {
      VariableDeclarator: { array: false, object: true },
      AssignmentExpression: { array: false, object: false }
    }
  ],
  'prefer-exponentiation-operator': 'error',
  'prefer-named-capture-group': 'off',
  'prefer-numeric-literals': 'error',
  'prefer-object-has-own': 'off',
  'prefer-object-spread': 'error',
  'prefer-promise-reject-errors': 'error',
  'prefer-reflect': 'off',
  'prefer-regex-literals': 'error',
  'prefer-rest-params': 'error',
  'prefer-spread': 'error',
  'prefer-template': 'error',
  'quote-props': 'off',
  quotes: ['error', 'single', { avoidEscape: true, allowTemplateLiterals: false }],
  radix: ['error', 'as-needed'],
  'require-atomic-updates': 'off',
  'require-await': 'error',
  'require-jsdoc': 'off',
  'require-unicode-regexp': 'off',
  'require-yield': 'error',
  'rest-spread-spacing': 'off',
  semi: 'off',
  'semi-spacing': 'off',
  'semi-style': 'off',
  'sort-imports': ['error', { ignoreCase: true, ignoreDeclarationSort: true }],
  'sort-keys': 'off',
  'sort-vars': 'off',
  'space-before-blocks': 'off',
  'space-before-function-paren': 'off',
  'space-in-parens': 'off',
  'space-infix-ops': 'off',
  'space-unary-ops': 'off',
  'spaced-comment': ['error', 'always', { block: { balanced: true } }],
  strict: 'error',
  'switch-colon-spacing': 'off',
  'symbol-description': 'error',
  'template-curly-spacing': 'off',
  'template-tag-spacing': 'off',
  'unicode-bom': 'off',
  'use-isnan': ['error', { enforceForIndexOf: true }],
  'valid-jsdoc': 'off',
  'valid-typeof': 'error',
  'vars-on-top': 'off',
  'wrap-iife': 'off',
  'wrap-regex': 'off',
  'yield-star-spacing': 'off',
  yoda: 'error'
}
